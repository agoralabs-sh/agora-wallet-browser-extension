name: "Pull Request Checks"

on:
  pull_request:

jobs:
  ##
  # install
  ##

  install:
    name: "Install"
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies

  ##
  # lint, type-check and test
  ##

  lint:
    name: "Lint"
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "👕 Lint"
        run: yarn lint

  type_check:
    name: "Type Check"
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "🔍 Type Check"
        run: yarn types:check

  test:
    name: "Test"
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "🧪 Test"
        run: yarn test

  ##
  # build
  ##

  build_chrome:
    name: "Build Chrome"
    needs: [install, type_check]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          posthog_api_host: ${{ secrets.POSTHOG_API_HOST }}
          posthog_project_id: ${{ secrets.POSTHOG_PROJECT_ID }}
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: yarn build:chrome
      - name: "🗜️ Zip build"
        run: zip -qr chrome_build.zip .chrome_build/
      - name: "📤 Upload build"
        uses: actions/upload-artifact@v4
        with:
          name: chrome_build
          path: chrome_build.zip

  build_edge:
    name: "Build Edge"
    needs: [install, type_check]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          posthog_api_host: ${{ secrets.POSTHOG_API_HOST }}
          posthog_project_id: ${{ secrets.POSTHOG_PROJECT_ID }}
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: yarn build:edge
      - name: "🗜️ Zip build"
        run: zip -qr edge_build.zip .edge_build/
      - name: "📤 Upload build"
        uses: actions/upload-artifact@v4
        with:
          name: edge_build
          path: edge_build.zip

  build_firefox:
    name: "Build Firefox"
    needs: [install, type_check]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "📝 Create .env file"
        uses: ./.github/actions/create-env-file
        with:
          posthog_api_host: ${{ secrets.POSTHOG_API_HOST }}
          posthog_project_id: ${{ secrets.POSTHOG_PROJECT_ID }}
          provider_id: ${{ vars.PROVIDER_ID }}
      - name: "🏗️ Build"
        run: yarn build:firefox
      - name: "🗜️ Zip build"
        run: zip -qr firefox_build.zip .firefox_build/
      - name: "📤 Upload build"
        uses: actions/upload-artifact@v4
        with:
          name: firefox_build
          path: firefox_build.zip

  ##
  # build validation
  ##

  validate_firefox:
    name: "Validate Firefox"
    needs: [install, build_firefox]
    runs-on: ubuntu-latest
    steps:
      - name: "🛎 Checkout"
        uses: actions/checkout@v4
      - name: "🔧 Setup"
        uses: ./.github/actions/use-dependencies
      - name: "📥 Download build"
        uses: actions/download-artifact@v4
        with:
          name: firefox_build
      - name: "🗜️ Unzip build"
        run: unzip -q firefox_build.zip
      - name: "✅ Validate"
        run: yarn validate:firefox

  ##
  # clean up
  ##

  clean_up:
    name: "Clean Up"
    needs: validate_firefox
    runs-on: ubuntu-latest
    steps:
      - name: "🗑️ Delete artifacts"
        uses: geekyeggo/delete-artifact@v4
        with:
          failOnError: false
          name: |
            chrome_build
            edge_build
            firefox_build
